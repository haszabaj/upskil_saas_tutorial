<!DOCTYPE html>

<table style="width:75%", class="table-condensed tabelka">
    <tr>
        <th colspan= "2">Tag</th>
        <th>Function</th>
    </tr>
    <tr>
        <td class="inbetween" colspan= "3">General</td>
    </tr>
    <tr>
        <td colspan="2"> &lt;link type="text/css" rel="stylesheet" href="stylesheet.css"/&gt;</td>
        <td>The CSS introduction in .html file (in head)<span style="color: hotpink"> it's also a self closing tag!</span></td>
    </tr>
    <tr>
        <td colspan="2"><p>class &#123; color: blue;</p>
            <p>&#125;</p>
        </td>
        <td>Changing colors, #hex for hexadecimal value <a href="http://www.hexcolortool.com/">Hex color tool</a></td>
    </tr>
    <tr>
        <td colspan="2"><p>class &#123; font-family: cursive, some other, some other;</p>
            <p>&#125;</p>
        </td>
        <td>Changing font family, popular (most basic) options are serif, sans-serif and cursive
        - add other options after a coma for backup</td>
    </tr>
    <tr>
        <td colspan="2"> font-size: Xpx;</td>
        <td> Changing font size</td>
    </tr>
    <tr>
        <td colspan="2"> font-size: Xem;</td>
        <td> Em is like px, but relative for screen size and therefore better
        for mobile devices. Valus are 1em, 0.5em, 2em and so on</td>
    </tr>
    <tr>
        <td colspan="2">background-color: yellow;</td>
        <td>Editing the background color</td>
    </tr>
    <tr>
        <td colspan="2">/*Comment*/</td>
        <td>CSS comments</td>
    </tr>
     <tr>
        <td colspan="2">&lt;style&gt;&lt;/style&gt;</td>
        <td>Putting CSS in .html</td>
    </tr>
    <tr>
        <td colspan= "3"   class="inbetween">Background</td>
    </tr>
    <tr>
        <td colspan="2">background-color: value;</td>
        <td>Setting background color</td>
    <tr>
        <td colspan= "2">line-height: 70%;</td>
        <td>Changing distance between lines, standart in a browser is around 110-120%</td>
    </tr>
    </tr>
    <tr>
        <td colspan="2">height: valuepx;</td>
        <td>Setting height value</td>
    </tr>
    <tr>
        <td colspan="2">width: valuepx;</td>
        <td>Setting width value</td>
    </tr>
    <tr>
        <td  class="inbetween" colspan= "3">Border</td>
    </tr>
    <tr>
        <td colspan="2">border: 1px solid red;</td>
        <td>Border values</td>
    </tr>
    <tr style="inbetween">
        <td colspan= "3">Selectors</td>
    </tr>
    <tr>
        <td class="firstrow">
            &lt;body&gt;</br>
            &nbsp;&lt;div&gt;</br>
            &nbsp;&nbsp;&lt;div&gt;</br>
            &nbsp;&nbsp;&nbsp;&lt;h3&gt;&lt;/h3&gt;</br>
            &nbsp;&nbsp;&lt;/div&gt;</br>
            &lt;/div&gt;</br>
            &lt;/body&gt;</br>
        </td>
        <td class="firstrow">
            div div h3 &#123; <br> 
            </br>
            &nbsp;&nbsp;&nbsp;&nbsp;color: blue;</br>
            &#125;</td>
        <td> Selecting a tag nested in other tags</td>
    </tr>
    <tr>
        <td colspan= "2">*</td>
        <td>Selects <em>every</em> element on the page</td>
    </tr>
    <tr>
        <td class="firstrow">
            <p>&lt;body&gt;</br>
            &nbsp;&lt;div&gt;</br>
            &nbsp;&nbsp;<strong>&lt;h3&gt;&lt;/h3&gt;</strong></br>
            &nbsp;&nbsp;&nbsp;&lt;ul&gt;</br>
            &nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;</br>
            &nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;&lt;/h3&gt;</br>
            &nbsp;&nbsp;&nbsp;&lt;/li&gt;</br>
            &nbsp;&nbsp;&lt;/ul&gt;</br>
            &nbsp;&lt;/div&gt;</br>
            &lt;/body&gt;</p>
            </td>
        <td class="firstrow">
            <p>div &gt; h3 &#123;</br>
            </br>
        &nbsp;&nbsp;&nbsp;&nbsp;font-weight: bold;</br>
            &#125;</p>
            </td>
        <td>Selecting not <em>every</em> every element nested inside a tag,</br> but noly these that are direct
        childer of the tag</td>
    </tr>
    <tr>
        <td class="firstrow">
            &lt;div&gt;</br>
            &nbsp;&lt;h1 class="newclass"&gt;&lt;/h1&gt;</br>
            &nbsp; &nbsp;&lt;ul&gt;</br>
            &nbsp;&nbsp;&nbsp;&lt;li&gt;</br>
            &nbsp;&nbsp;&nbsp;&nbsp;&lt;h3 class="newclass"&gt;&lt;/h3&gt;</br>
            &nbsp;&nbsp;&nbsp;&lt;/li&gt;</br>
            &nbsp;&nbsp;&lt;/ul&gt;</br>
            &nbsp;&lt;/div&gt;</br>
            </td>
        <td class="firstrow">.newclass &#123;</br>
        </br>
         &nbsp;&nbsp;&nbsp;font-weight: bold;</br>
        &#125;</td>
        <td>Attributing a class to html elements, same class can be used for different html element type!</td>
    </tr>
        <tr>
        <td class="firstrow">
            &lt;div&gt;</br>
            &nbsp;&lt;h1 id="newid"&gt;&lt;/h1&gt;</br>
            &nbsp;&nbsp;&lt;ul&gt;</br>
            &nbsp;&nbsp;&nbsp;&lt;li&gt;</br>
            &nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;&lt;/h3&gt; </br>
            &nbsp;&nbsp;&nbsp;&lt;/li&gt;</br>
            &nbsp;&nbsp;&lt;/ul&gt;</br>
            &lt;/div&gt;
            </td>
        <td class="firstrow">#newid &#123;</br>
        </br>
        &nbsp;&nbsp;&nbsp;font-weight: bold;</br>
        &#125;</td>
        <td>Attributing an id to a certain element (usually only one)</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">element:pseudoclass</br>
        i.e. a:hover<br>
        a:visited</br>
        a:link
        </td>
        <td>Pseudoclasses added after selectors determine CSS for different states - i.e. hover, visited link etc.</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">&:pseudoclass</td>
        <td>nesting psudoclasses in CSS (with two {{}})</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">element:first-child</td>
        <td>Peudoclass selecting only specific pointed element types, that are also first children of their parent tag </td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">element:nth-child(n)</td>
        <td>Peudoclass selecting only specific pointed element types, that are also nth children of their parent tag </td>
    </tr>
    <tr>
        <td class="inbetween" colspan= "3">Positioning</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">display:block</br>display:inline-block</br>display:inline</br>dsiplay:none</td>
        <td>Display values for positioning: The inline-block value allows you to put <br>several block elements on the same line. The inline value places all your elements next to one </br>another, but not as blocks: they don't keep their dimensions.</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">margin: auto;</td>
        <td>Automatic margin is centered from left to right</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">margin-top: Xpx;</br>margin-left: Xpx;</br>margin-bottom: Xpx;</br>margin-right: Xpx;</br>
        margin: Xpx Xpx Xpx Xpx</td>
        <td>Defying margin - in the 2nd method goes in the order top-right-bottom-left (clockwise)</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">padding: Xpx;</br>
        padding: Xpx Xpx Xpx Xpx;</br>padding-right: Xpx;</br>padding-top: Xpx;</br>padding-bottom: Xpx;</br>padding-left: Xpx;</td>
        <td>Values of padding, when one vaulue is set it's even on eah side</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">positive value</td>
        <td>Moves content a certain number of pixels from the <em>right</em> screen border &#x2192;<strong>moves to the right or down</strong></td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">negative value</td>
        <td>Moves content a certain number of pixels from the <em>left</em> screen border &#x2192;<strong>moves to the left or up</strong></td>
    </tr>
    <tr>
        <td class="firstrow" colspan="2">float: right;</br>float: left;</br>float: top;</br>float: bottom;</td>
        <td>Tells the element to stick to one side of the screen</td>
    </tr>
    <tr>
        <td class="firstrow" colspan="2">clear: right;</br>clear: left;</br>clear: both</td>
        <td>Tells the element to clear the way for all lements occupying the right, the left or both</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">position: absolute;</br>position: static;</td>
        <td>When an element is static, it is positioned where normally such element should be placed. </br>
        When it's absolute its margins and stuff are positioned to the nearest <strong>also absolute</strong></br>
        element. Everything moves in position to other elements, not in position to the static background.</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">position: relative;</td>
        <td>Positions element not in position to the nearest element but in position to otherwise it would land</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">position: relative;</td>
        <td>Positions element not in position to the nearest element but in position to otherwise it would land</td>
    </tr>
    <tr>
        <td class="firstrow" colspan= "2">position: fixed;</td>
        <td>Positions element not in position to the nearest element but makes it glued to the screen (moves when scrolling)</td>
    </tr>
      <tr>
        <td class="firstrow" colspan= "2">z-index: 1;</td>
        <td>Determines stacking order, the highest the number, the more the element is on top - <strong>work only on positioned elements</strong></td>
    </tr>
        
</table>