<!DOCTYPE html>
<html lang="en">
<head>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>
<body>

<div class="container">
  <h2>Ruby commands</h2>
  <table class="table table-striped">
    <thead>
      <tr>
        <th>Command</th>
        <th>Use</th>
      </tr>
    </thead>
    <tbody>
      <tr>
            <td>Addition (+)</br>
                Subtraction (-) </br>
                Multiplication (*) </br>
                Division (/) </br>
                Exponentiation (**) </br>
                Modulo (%)</td>
            <td>Mathematical equations: exponentation: potÄ™ga, modulo: reszta</td>
        </tr>
         <tr>
            <td>"...".length</td>
            <td>Counts the number of characters in a string</td>
        </tr>
         <tr>
            <td>"...".reverse</td>
            <td>Reverses the string</td>
        </tr>
        <tr>
            <td>#</td>
            <td>Comment, no closing!</td>
        </tr>
        <tr>
            <td>=begin</br>Comment</br>Comment</br>=end</td>
            <td>Multi-lined comments</td>
        </tr>
        <tr>
            <td>my_num =     25</br>my_boolean =     true</br>my_string =     "Ruby"</td>
            <td>Setting values</td>
        </tr>
        <tr>
            <td>print "Ruby"</td>
            <td>Displaying content on the screen</td>
        </tr>
        <tr>
            <td>variable= gets.chomp</td>
            <td>Gets = inquires content from user </br>Chomp = addes new line after each bit of input</td>
        </tr>
        <tr>
            <td>variable= gets.chomp</br>puts "Your name is #{variable}"</td>
            <td>String interpolation</td>
        </tr>
        <tr>
            <td><xmp>print "What is your state/province?"
                    state = gets.chomp
                    state2 = state.upcase
                    state.upcase!
                    puts = "Your name is #{first_name} #{last_name}. You come from #{city} in #{state}.</xmp></td>
            <td>state = input by user, state2 = display of input. commend "!" setting an answer. </td>
        </tr>
        <tr>
                    <td><xmp>if 1 > 2
                    print "I won't get printed because one is less than two."
                    end </xmp></td>
            <td>if the condition is met, program puts the value ("true"), if not ignores this part of code </td>
        </tr>
        <tr>
                    <td><xmp>if 1 > 2
                    print "Value"
                    else
                    print "Other_Value"
                    end </xmp></td>
            <td>if the condition is met, program puts the value ("true"), if not, puts the other value </td>
        </tr>
         <tr>
                    <td><xmp>if x < y  # Assumes x and y are defined
                    puts "x is less than y!"
                    elsif x > y
                    puts "x is greater than y!"
                    else
                    puts "x equals y!"
                    end</xmp></td>
            <td>if the condition is met, program puts the value ("true"), if not, checks for another condition, if all is false puts else. </td>
        </tr>
            <tr>
                <td><xmp>unless hungry
                puts "value"
                else
                puts "value2"
                end</xmp></td>
            <td>if the condition is not met, program puts the value ("true"), if not puts else. </td>
        </tr>
        <tr>
            <td><xmp>x = 2
                        y = 2
                        x == y
                        x != z
                        print "x and y are equal!"
                        end</xmp></td>
            <td>== equals, != does not equal</td>
        </tr>
        <tr>
            <td> ></br><</br>>=</br><=</td>
            <td>Other options</td>
        </tr>
        <tr>
            <td>true && true # => true</td>
            <td>Double condition must be met</td>
        </tr>
         <tr>
            <td>true || true # => true</td>
            <td>One or OTHER condition must be met</td>
        </tr>
         <tr>
            <td><xmp>!true # => false
            !false # => true</xmp></td>
            <td>! means not_value</td>
        </tr>
    </tbody>
  </table>
</div>

</body>
</html>
